2021-03-01 (March 1, 2021) First entry into CHANGELOG.
- I started the project: creating one web page with a text area and a button.
- I added a checkbox with functionality.
- I started the project as a way to type ISO233 characters without installing an extra keyboard.

    v1.00 2021-03-01
    Initial version. A textbox, a button and a checkbox.

    v1.01: 2021-03-01
    - allowed lowercase D with underdot to be typed. It was missing from the table.

    v1.02: 2021-03-01
    - ensure that checkbox does not go out of sync after page refresh.

2021-03-01 v1.10
- Switched to generating code using a template. Now a language can be added by adding two files, one
for the name of the language, and another for the substitutions that it supports. The developer then must
edit the shell script "generateWebPages.sh" and run it, and it should produce a suitable result.

At the same time the following orthographies have been added: French, Spanish or Portuguese, Maltese and Berber Latin alphabet.

2021-03-02 (no version change still v1.10)
- Add modern south arabian languages: Mehri and Soqotri

- Add support for German.

2021-03-02 v1.11
- Add padding to text area to make text clearer: (because the diacritics sometimes got cut off)

2021-03-02 (no version change)
- Add support for Pinyin
- Add support for Polish
- Add support for Icelandic
- Add support for Irish
- Add support for Scottish Gaelic
- Add support for Latin

2021-03-02 v1.20
- Generate a spreadsheet formula (useful for people who use spreadsheet applications)
- Generate terminal command using Python 3 (for people who work on the command line)

2021-03-03 v1.21
- Fix bug where second character input by user was being ignored. As of this version, it is no longer ignored.
- Implement Buckwalter transliteration system (a reversible romanization system for Arabic) (both ways)

2021-03-03 no change in version number
- Refactor code for generating web pages.
- New feature: generate an index page with links to generated web applications.

2021-03-03 no change in version number
- Separate Spanish and Portuguese instead of existing on a single page.

2021-03-03 v1.22
 - Remove stray apostrophe in replacement string for French (for capital cedilla)
 - include name of app near version number in footer
 - create a simpler to use alternative where no replacement occurs. Instead the user pushes buttons to enter non-ASCII characters.
    - This is called Type and Click instead of Type and Replace.
    
2021-05-21 v1.24
  - Bug fix: no longer skip every second character when transliterating.
  - No longer generate useless Type-and-click app for Buckwalter transliteration system. Only the type-and-replace one.
  - Remove dead code from the type and click app.
  
2022-03-21 v1.25
  - Bug fix: ignore invisible characters when comparing strings for equality
      - this bug was discovered while creating text replacement tokens that used characters of different directionality, while creating text replacement methods for Arabic and Hebrew
  - Aside: I did not run the Python script to generate the Arabic or Hebrew type and replace web pages, because I don't have access to it at the time.
  - I created an input method for generating Hebrew diacritics and special symbols. Although the vowel and gemination diacritics are available on various commonly available Hebrew keyboards, 
  most people are unaware of them or how to type them. Therefore I created an easy to learn, but slow to type input method for typing these characters. It uses the full name of the diacritic in English and Hebrew as a super simple mnemonic. 
  It also uses the percent character around the English word as though it were an escape sequence e.g. %HEBREW LETTER ALEF%. For Hebrew it uses the Hebrew Sheqel symbol instead. Note I put it both before and after the word,
  because users are likely to get confused depending on what text direction their paragraph is written in, if I only required the sheqel symbol before.
  - I created an input method similarly for Arabic. Note, there are more Arabic diacritics not covered, but I focussed mostly on the ones in the most common religious texts of the religion of Islam, 
  and its most popular edition in Canada ("Reading according to Hafs"). More work is needed verifying the correctness of the Arabic names of the characters. Unfortunately I could not find a definitive source for
  many of the names  of the characters provided by Unicode in Arabic. 
      
